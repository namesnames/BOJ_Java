import math
N = int(input())
# 풀이 설명
# 예를 들어 10이라는 숫자를 진행하려고 해
# 그럼 방법이 3가지가 있잖아. 3나누거나 2나누거나 1빼거나 
# 이 세 개 중에서 하나를 해야하는데 일단 뭐가 최선인지 모르니까 다 해봐
# 그럼 3나누는 건 안되니까 나가리 (이런건 inf 처리)
# 2로 나누면 5가 되고 또, 1 빼면 9가 되지?
# 그럼 이제 여기서 5랑 9 둘 중에 1로 가장 빨리 갈 수 있는 방법을 찾아야 해 
# 그 방법이 명확히 없어서 우리는 메모이제이션 방법을 쓸 거다
# 1 -> 0번
# 2 -> 1번
# 3 -> 1번   
# 4 -> 2번 // 4에서 할 수 있는 건 2로 나누거나 1빼는 것 // 2나누면 2로 간다 = 즉 1번 // 1 빼면 3으로 간다 = 즉 1번 
# 5 -> 2번 // 4에서 할 수 있는 건 1빼는 것  // 1빼면 4로간다 = 즉 1번 // + 4에서 1을 빼는 행동 1번 더해줘서 총 2번
# 이런식으로 초반부분은 직접 할 수 있으니까 직접 하고 나머지 뒤의 과정은 이제 로직을 짜서 구할거야
# f(n) = 1 + min( f(n//3), f(n//2), f(n-1))
# 1 더하는 건 처음에 2나 3으로 나누거나 1빼는 행위 1번을 의미
# f(n//3) -> 3으로 나눴을 때로 감
# f(n//2) -> 2로 나눴을 때로 감
# f(n-1) -> 1을 뺐을 때로 감
# 이 세 개중에 더 최소의 수를 고르는 것

arr = [0,0,1,1,2] # 맨 앞의 0은 그냥 둔 것 # 인덱스 1부터 시작하고 싶어서
for i in range(5,N+1): # 이제 나머지 배열도 다 채울것임 # i가 이제 우리가 시행하는 숫자들
    one, two, three = math.inf, math.inf, arr[i-1]
    # one = 3으로 나눌 때, two = 2로 나눌 때 // 3이나 2로 못나누는 수가 나올 수 있으니까 미리 무한대 처리 # three는 1빼는 건데 1을 못뺄리는 없지? 걍 arr[i-1]
    if(i % 3 == 0):
        one = arr[i // 3]
    if(i % 2 == 0):
        two = arr[i // 2]
    
    arr.append(1+ min(one, two, three))
    
print(arr[N])


    